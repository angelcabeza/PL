main{
    begin_local_var
        int ve ;
        double vf ;
        char vc ;
        bool vl ;
        list of int pe, pe2 ;
        list of double pf, pf2 ;
        list of char pc, pc2 ;
        list of bool pl ;
    end_local_var

    int funcionA (int a1, double a2, char a3){
        begin_local_var
            int x1, x2 ;
        end_local_var
        char funcionB (char b1, bool b2){
            begin_local_var
                int h1 ;
                double xf, x2 ;
            end_local_var
            double funcionC (bool c1, int c2){
                begin_local_var
                    double x1 ;
                end_local_var
                x1= 1.3 ;
                if (c2>10){
                    c2 = c2-1 ;
                }
                else{
                    x1= 3.1 ;
                }
                return x1 ;
            }

            xf= funcionC (true, 10);
            x2= xf*(funcionC(false,1)-funcionC(true,23))/10.0;
            while (x2*funcionC(false,1)-xf<10.0){
                x2= x2*xf ;
            }

            for h1 = 1 to 10 do {
                h1 = h1 ;
            }
            
            xf = 5.0;
        }
        double funcionD (double d1){
            begin_local_var
                char dato ;
                int valor ;
            end_local_var
            char funcionE (char e1, char e2)
            {
                read "introduzca dos caracteres: ", e1, e2 ;
                if (e1=='a'){
                    return e1 ;
                }
                else if (e1=='b'){
                    return e2 ;
                }
                else{
                    return '';
                }
            }
            read "introduzca un valor entero: ", valor ;
            if (d1>0.0){
                begin_local_var
                    int dato ;
                end_local_var
                dato= 2 ;
                dato= valor*20/dato ;
            }
            else {
                valor= valor * 100 ;
                d1= d1/1000.0 ;
            }
            return d1 ;
        }

        pe = pe ++ 10 @ 1 ;

        if ( (pe@2) == 20){
            ve = pe -- 1 ;
        } 
        else {
            pe = pe * 5;
            pe = pe2 -10;
        }

    }

    return 1;
}