State 122 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: MAIN B

    2 B: INIBLO Dvl Dss Ses ENDBLO

    3 Dvl: INIVAR Vl ENDVAR
    4    | %empty

    5 Vl: Vl Cdv
    6   | Cdv

    7 Cdv: TYPEVAR Lv SEMICOLON
    8    | El SEMICOLON

    9 Lv: Lv COMMA ID
   10   | ID

   11 El: LIST TYPEVAR Lv

   12 Dss: Dss Ds
   13    | %empty

   14 Ds: Cs B

   15 Cs: Dc ID INIPA Pa ENDPA
   16   | Dc ID INIPA ENDPA

   17 Dc: LIST TYPEVAR
   18   | TYPEVAR

   19 Pa: Pa COMMA Dc ID
   20   | Dc ID

   21 Ses: Ses Se
   22    | Se

   23 Se: B
   24   | ID ASIGN Exp SEMICOLON
   25   | IF INIPA Exp ENDPA Se
   26   | IF INIPA Exp ENDPA Se ELSE Se
   27   | WHILE INIPA Exp ENDPA Se
   28   | FOR ID ASIGN CONST_INT ITEFOR CONST_INT DO Se
   29   | READ Lv SEMICOLON
   30   | PRINT Lec SEMICOLON
   31   | RETURN Exp SEMICOLON
   32   | Exp LISTOP1
   33   | LISTOP2 Exp

   34 Exp: INIPA Exp ENDPA
   35    | UNARI Exp
   36    | ADDITION Exp
   37    | PLUSPLUS Exp
   38    | MINMIN Exp
   39    | Exp Bin_op Exp
   40    | Exp BINOP Exp
   41    | ID PLUSPLUS CONST_INT ATSIGN CONST_INT
   42    | ID INIPA Vle ENDPA
   43    | ID
   44    | Const
   45    | INISQR lc ENDSQR

   46 Bin_op: ADDITION
   47       | ATSIGN
   48       | MINMIN
   49       | COMPAR
   50       | EQUALS
   51       | ORLOG
   52       | ANDLOG
   53       | EXOR
   54       | MULTI

   55 Const: CONSTANT
   56      | CONST_INT

   57 Con: CONSTANT
   58    | CONSTANT_INT

   59 lc: lc COMMA Con
   60   | Con

   61 Lec: Lec COMMA Exp
   62    | Lec COMMA WORD
   63    | Exp
   64    | WORD

   65 Vle: Le
   66    | %empty

   67 Le: Le COMMA Exp
   68   | Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
UNARI (258) 35
ADDITION (259) 36 46
LISTOP2 (260) 33
MINMIN (261) 38 48
PLUSPLUS (262) 37 41
BINOP (263) 40
ATSIGN (264) 41 47
MAIN (265) 1
INIBLO (266) 2
ENDBLO (267) 2
INIVAR (268) 3
ENDVAR (269) 3
TYPEVAR (270) 7 11 17 18
SEMICOLON (271) 7 8 24 29 30 31
COMMA (272) 9 19 59 61 62 67
ID (273) 9 10 15 16 19 20 24 28 41 42 43
INIPA (274) 15 16 25 26 27 34 42
ENDPA (275) 15 16 25 26 27 34 42
LIST (276) 11 17
IF (277) 25 26
ELSE (278) 26
FOR (279) 28
WHILE (280) 27
ASIGN (281) 24 28
CONST_INT (282) 28 41 56
ITEFOR (283) 28
DO (284) 28
READ (285) 29
PRINT (286) 30
RETURN (287) 31
LISTOP1 (288) 32
CONSTANT (289) 55 57
CONSTANT_INT (290) 58
WORD (291) 62 64
INISQR (292) 45
ENDSQR (293) 45
ORLOG (294) 51
ANDLOG (295) 52
EXOR (296) 53
EQUALS (297) 50
COMPAR (298) 49
MULTI (299) 54


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
S (46)
    on left: 1, on right: 0
B (47)
    on left: 2, on right: 1 14 23
Dvl (48)
    on left: 3 4, on right: 2
Vl (49)
    on left: 5 6, on right: 3 5
Cdv (50)
    on left: 7 8, on right: 5 6
Lv (51)
    on left: 9 10, on right: 7 9 11 29
El (52)
    on left: 11, on right: 8
Dss (53)
    on left: 12 13, on right: 2 12
Ds (54)
    on left: 14, on right: 12
Cs (55)
    on left: 15 16, on right: 14
Dc (56)
    on left: 17 18, on right: 15 16 19 20
Pa (57)
    on left: 19 20, on right: 15 19
Ses (58)
    on left: 21 22, on right: 2 21
Se (59)
    on left: 23 24 25 26 27 28 29 30 31 32 33, on right: 21 22 25 26
    27 28
Exp (60)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45, on right: 24 25 26
    27 31 32 33 34 35 36 37 38 39 40 61 63 67 68
Bin_op (61)
    on left: 46 47 48 49 50 51 52 53 54, on right: 39
Const (62)
    on left: 55 56, on right: 44
Con (63)
    on left: 57 58, on right: 59 60
lc (64)
    on left: 59 60, on right: 45 59
Lec (65)
    on left: 61 62 63 64, on right: 30 61 62
Vle (66)
    on left: 65 66, on right: 42
Le (67)
    on left: 67 68, on right: 65 67


State 0

    0 $accept: . S $end

    MAIN  shift, and go to state 1

    S  go to state 2


State 1

    1 S: MAIN . B

    INIBLO  shift, and go to state 3

    B  go to state 4


State 2

    0 $accept: S . $end

    $end  shift, and go to state 5


State 3

    2 B: INIBLO . Dvl Dss Ses ENDBLO

    INIVAR  shift, and go to state 6

    $default  reduce using rule 4 (Dvl)

    Dvl  go to state 7


State 4

    1 S: MAIN B .

    $default  reduce using rule 1 (S)


State 5

    0 $accept: S $end .

    $default  accept


State 6

    3 Dvl: INIVAR . Vl ENDVAR

    TYPEVAR  shift, and go to state 8
    LIST     shift, and go to state 9

    Vl   go to state 10
    Cdv  go to state 11
    El   go to state 12


State 7

    2 B: INIBLO Dvl . Dss Ses ENDBLO

    $default  reduce using rule 13 (Dss)

    Dss  go to state 13


State 8

    7 Cdv: TYPEVAR . Lv SEMICOLON

    ID  shift, and go to state 14

    Lv  go to state 15


State 9

   11 El: LIST . TYPEVAR Lv

    TYPEVAR  shift, and go to state 16


State 10

    3 Dvl: INIVAR Vl . ENDVAR
    5 Vl: Vl . Cdv

    ENDVAR   shift, and go to state 17
    TYPEVAR  shift, and go to state 8
    LIST     shift, and go to state 9

    Cdv  go to state 18
    El   go to state 12


State 11

    6 Vl: Cdv .

    $default  reduce using rule 6 (Vl)


State 12

    8 Cdv: El . SEMICOLON

    SEMICOLON  shift, and go to state 19


State 13

    2 B: INIBLO Dvl Dss . Ses ENDBLO
   12 Dss: Dss . Ds

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    LISTOP2    shift, and go to state 22
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    INIBLO     shift, and go to state 3
    TYPEVAR    shift, and go to state 25
    ID         shift, and go to state 26
    INIPA      shift, and go to state 27
    LIST       shift, and go to state 28
    IF         shift, and go to state 29
    FOR        shift, and go to state 30
    WHILE      shift, and go to state 31
    CONST_INT  shift, and go to state 32
    READ       shift, and go to state 33
    PRINT      shift, and go to state 34
    RETURN     shift, and go to state 35
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    B      go to state 38
    Ds     go to state 39
    Cs     go to state 40
    Dc     go to state 41
    Ses    go to state 42
    Se     go to state 43
    Exp    go to state 44
    Const  go to state 45


State 14

   10 Lv: ID .

    $default  reduce using rule 10 (Lv)


State 15

    7 Cdv: TYPEVAR Lv . SEMICOLON
    9 Lv: Lv . COMMA ID

    SEMICOLON  shift, and go to state 46
    COMMA      shift, and go to state 47


State 16

   11 El: LIST TYPEVAR . Lv

    ID  shift, and go to state 14

    Lv  go to state 48


State 17

    3 Dvl: INIVAR Vl ENDVAR .

    $default  reduce using rule 3 (Dvl)


State 18

    5 Vl: Vl Cdv .

    $default  reduce using rule 5 (Vl)


State 19

    8 Cdv: El SEMICOLON .

    $default  reduce using rule 8 (Cdv)


State 20

   35 Exp: UNARI . Exp

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 50
    Const  go to state 45


State 21

   36 Exp: ADDITION . Exp

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 51
    Const  go to state 45


State 22

   33 Se: LISTOP2 . Exp

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 52
    Const  go to state 45


State 23

   38 Exp: MINMIN . Exp

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 53
    Const  go to state 45


State 24

   37 Exp: PLUSPLUS . Exp

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 54
    Const  go to state 45


State 25

   18 Dc: TYPEVAR .

    $default  reduce using rule 18 (Dc)


State 26

   24 Se: ID . ASIGN Exp SEMICOLON
   41 Exp: ID . PLUSPLUS CONST_INT ATSIGN CONST_INT
   42    | ID . INIPA Vle ENDPA
   43    | ID .

    PLUSPLUS  shift, and go to state 55
    INIPA     shift, and go to state 56
    ASIGN     shift, and go to state 57

    $default  reduce using rule 43 (Exp)


State 27

   34 Exp: INIPA . Exp ENDPA

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 58
    Const  go to state 45


State 28

   17 Dc: LIST . TYPEVAR

    TYPEVAR  shift, and go to state 59


State 29

   25 Se: IF . INIPA Exp ENDPA Se
   26   | IF . INIPA Exp ENDPA Se ELSE Se

    INIPA  shift, and go to state 60


State 30

   28 Se: FOR . ID ASIGN CONST_INT ITEFOR CONST_INT DO Se

    ID  shift, and go to state 61


State 31

   27 Se: WHILE . INIPA Exp ENDPA Se

    INIPA  shift, and go to state 62


State 32

   56 Const: CONST_INT .

    $default  reduce using rule 56 (Const)


State 33

   29 Se: READ . Lv SEMICOLON

    ID  shift, and go to state 14

    Lv  go to state 63


State 34

   30 Se: PRINT . Lec SEMICOLON

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    WORD       shift, and go to state 64
    INISQR     shift, and go to state 37

    Exp    go to state 65
    Const  go to state 45
    Lec    go to state 66


State 35

   31 Se: RETURN . Exp SEMICOLON

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 67
    Const  go to state 45


State 36

   55 Const: CONSTANT .

    $default  reduce using rule 55 (Const)


State 37

   45 Exp: INISQR . lc ENDSQR

    CONSTANT      shift, and go to state 68
    CONSTANT_INT  shift, and go to state 69

    Con  go to state 70
    lc   go to state 71


State 38

   23 Se: B .

    $default  reduce using rule 23 (Se)


State 39

   12 Dss: Dss Ds .

    $default  reduce using rule 12 (Dss)


State 40

   14 Ds: Cs . B

    INIBLO  shift, and go to state 3

    B  go to state 72


State 41

   15 Cs: Dc . ID INIPA Pa ENDPA
   16   | Dc . ID INIPA ENDPA

    ID  shift, and go to state 73


State 42

    2 B: INIBLO Dvl Dss Ses . ENDBLO
   21 Ses: Ses . Se

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    LISTOP2    shift, and go to state 22
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    INIBLO     shift, and go to state 3
    ENDBLO     shift, and go to state 74
    ID         shift, and go to state 26
    INIPA      shift, and go to state 27
    IF         shift, and go to state 29
    FOR        shift, and go to state 30
    WHILE      shift, and go to state 31
    CONST_INT  shift, and go to state 32
    READ       shift, and go to state 33
    PRINT      shift, and go to state 34
    RETURN     shift, and go to state 35
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    B      go to state 38
    Se     go to state 75
    Exp    go to state 44
    Const  go to state 45


State 43

   22 Ses: Se .

    $default  reduce using rule 22 (Ses)


State 44

   32 Se: Exp . LISTOP1
   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    BINOP     shift, and go to state 78
    ATSIGN    shift, and go to state 79
    LISTOP1   shift, and go to state 80
    ORLOG     shift, and go to state 81
    ANDLOG    shift, and go to state 82
    EXOR      shift, and go to state 83
    EQUALS    shift, and go to state 84
    COMPAR    shift, and go to state 85
    MULTI     shift, and go to state 86

    Bin_op  go to state 87


State 45

   44 Exp: Const .

    $default  reduce using rule 44 (Exp)


State 46

    7 Cdv: TYPEVAR Lv SEMICOLON .

    $default  reduce using rule 7 (Cdv)


State 47

    9 Lv: Lv COMMA . ID

    ID  shift, and go to state 88


State 48

    9 Lv: Lv . COMMA ID
   11 El: LIST TYPEVAR Lv .

    COMMA  shift, and go to state 47

    $default  reduce using rule 11 (El)


State 49

   41 Exp: ID . PLUSPLUS CONST_INT ATSIGN CONST_INT
   42    | ID . INIPA Vle ENDPA
   43    | ID .

    PLUSPLUS  shift, and go to state 55
    INIPA     shift, and go to state 56

    $default  reduce using rule 43 (Exp)


State 50

   35 Exp: UNARI Exp .
   39    | Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    ATSIGN    shift, and go to state 79
    MULTI     shift, and go to state 86

    $default  reduce using rule 35 (Exp)

    Bin_op  go to state 87


State 51

   36 Exp: ADDITION Exp .
   39    | Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    MINMIN  shift, and go to state 77
    ATSIGN  shift, and go to state 79
    MULTI   shift, and go to state 86

    $default  reduce using rule 36 (Exp)

    Bin_op  go to state 87


State 52

   33 Se: LISTOP2 Exp .
   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    MINMIN  shift, and go to state 77
    BINOP   shift, and go to state 78
    ATSIGN  shift, and go to state 79
    ORLOG   shift, and go to state 81
    ANDLOG  shift, and go to state 82
    EXOR    shift, and go to state 83
    EQUALS  shift, and go to state 84
    COMPAR  shift, and go to state 85
    MULTI   shift, and go to state 86

    $default  reduce using rule 33 (Se)

    Bin_op  go to state 87


State 53

   38 Exp: MINMIN Exp .
   39    | Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    MINMIN  shift, and go to state 77
    ATSIGN  shift, and go to state 79

    $default  reduce using rule 38 (Exp)

    Bin_op  go to state 87


State 54

   37 Exp: PLUSPLUS Exp .
   39    | Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    ATSIGN    shift, and go to state 79
    MULTI     shift, and go to state 86

    $default  reduce using rule 37 (Exp)

    Bin_op  go to state 87


State 55

   41 Exp: ID PLUSPLUS . CONST_INT ATSIGN CONST_INT

    CONST_INT  shift, and go to state 89


State 56

   42 Exp: ID INIPA . Vle ENDPA

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    $default  reduce using rule 66 (Vle)

    Exp    go to state 90
    Const  go to state 45
    Vle    go to state 91
    Le     go to state 92


State 57

   24 Se: ID ASIGN . Exp SEMICOLON

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 93
    Const  go to state 45


State 58

   34 Exp: INIPA Exp . ENDPA
   39    | Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    BINOP     shift, and go to state 78
    ATSIGN    shift, and go to state 79
    ENDPA     shift, and go to state 94
    ORLOG     shift, and go to state 81
    ANDLOG    shift, and go to state 82
    EXOR      shift, and go to state 83
    EQUALS    shift, and go to state 84
    COMPAR    shift, and go to state 85
    MULTI     shift, and go to state 86

    Bin_op  go to state 87


State 59

   17 Dc: LIST TYPEVAR .

    $default  reduce using rule 17 (Dc)


State 60

   25 Se: IF INIPA . Exp ENDPA Se
   26   | IF INIPA . Exp ENDPA Se ELSE Se

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 95
    Const  go to state 45


State 61

   28 Se: FOR ID . ASIGN CONST_INT ITEFOR CONST_INT DO Se

    ASIGN  shift, and go to state 96


State 62

   27 Se: WHILE INIPA . Exp ENDPA Se

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 97
    Const  go to state 45


State 63

    9 Lv: Lv . COMMA ID
   29 Se: READ Lv . SEMICOLON

    SEMICOLON  shift, and go to state 98
    COMMA      shift, and go to state 47


State 64

   64 Lec: WORD .

    $default  reduce using rule 64 (Lec)


State 65

   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp
   63 Lec: Exp .

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    BINOP     shift, and go to state 78
    ATSIGN    shift, and go to state 79
    ORLOG     shift, and go to state 81
    ANDLOG    shift, and go to state 82
    EXOR      shift, and go to state 83
    EQUALS    shift, and go to state 84
    COMPAR    shift, and go to state 85
    MULTI     shift, and go to state 86

    $default  reduce using rule 63 (Lec)

    Bin_op  go to state 87


State 66

   30 Se: PRINT Lec . SEMICOLON
   61 Lec: Lec . COMMA Exp
   62    | Lec . COMMA WORD

    SEMICOLON  shift, and go to state 99
    COMMA      shift, and go to state 100


State 67

   31 Se: RETURN Exp . SEMICOLON
   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    ADDITION   shift, and go to state 76
    MINMIN     shift, and go to state 77
    BINOP      shift, and go to state 78
    ATSIGN     shift, and go to state 79
    SEMICOLON  shift, and go to state 101
    ORLOG      shift, and go to state 81
    ANDLOG     shift, and go to state 82
    EXOR       shift, and go to state 83
    EQUALS     shift, and go to state 84
    COMPAR     shift, and go to state 85
    MULTI      shift, and go to state 86

    Bin_op  go to state 87


State 68

   57 Con: CONSTANT .

    $default  reduce using rule 57 (Con)


State 69

   58 Con: CONSTANT_INT .

    $default  reduce using rule 58 (Con)


State 70

   60 lc: Con .

    $default  reduce using rule 60 (lc)


State 71

   45 Exp: INISQR lc . ENDSQR
   59 lc: lc . COMMA Con

    COMMA   shift, and go to state 102
    ENDSQR  shift, and go to state 103


State 72

   14 Ds: Cs B .

    $default  reduce using rule 14 (Ds)


State 73

   15 Cs: Dc ID . INIPA Pa ENDPA
   16   | Dc ID . INIPA ENDPA

    INIPA  shift, and go to state 104


State 74

    2 B: INIBLO Dvl Dss Ses ENDBLO .

    $default  reduce using rule 2 (B)


State 75

   21 Ses: Ses Se .

    $default  reduce using rule 21 (Ses)


State 76

   46 Bin_op: ADDITION .

    $default  reduce using rule 46 (Bin_op)


State 77

   48 Bin_op: MINMIN .

    $default  reduce using rule 48 (Bin_op)


State 78

   40 Exp: Exp BINOP . Exp

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 105
    Const  go to state 45


State 79

   47 Bin_op: ATSIGN .

    $default  reduce using rule 47 (Bin_op)


State 80

   32 Se: Exp LISTOP1 .

    $default  reduce using rule 32 (Se)


State 81

   51 Bin_op: ORLOG .

    $default  reduce using rule 51 (Bin_op)


State 82

   52 Bin_op: ANDLOG .

    $default  reduce using rule 52 (Bin_op)


State 83

   53 Bin_op: EXOR .

    $default  reduce using rule 53 (Bin_op)


State 84

   50 Bin_op: EQUALS .

    $default  reduce using rule 50 (Bin_op)


State 85

   49 Bin_op: COMPAR .

    $default  reduce using rule 49 (Bin_op)


State 86

   54 Bin_op: MULTI .

    $default  reduce using rule 54 (Bin_op)


State 87

   39 Exp: Exp Bin_op . Exp

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 106
    Const  go to state 45


State 88

    9 Lv: Lv COMMA ID .

    $default  reduce using rule 9 (Lv)


State 89

   41 Exp: ID PLUSPLUS CONST_INT . ATSIGN CONST_INT

    ATSIGN  shift, and go to state 107


State 90

   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp
   68 Le: Exp .

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    BINOP     shift, and go to state 78
    ATSIGN    shift, and go to state 79
    ORLOG     shift, and go to state 81
    ANDLOG    shift, and go to state 82
    EXOR      shift, and go to state 83
    EQUALS    shift, and go to state 84
    COMPAR    shift, and go to state 85
    MULTI     shift, and go to state 86

    $default  reduce using rule 68 (Le)

    Bin_op  go to state 87


State 91

   42 Exp: ID INIPA Vle . ENDPA

    ENDPA  shift, and go to state 108


State 92

   65 Vle: Le .
   67 Le: Le . COMMA Exp

    COMMA  shift, and go to state 109

    $default  reduce using rule 65 (Vle)


State 93

   24 Se: ID ASIGN Exp . SEMICOLON
   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    ADDITION   shift, and go to state 76
    MINMIN     shift, and go to state 77
    BINOP      shift, and go to state 78
    ATSIGN     shift, and go to state 79
    SEMICOLON  shift, and go to state 110
    ORLOG      shift, and go to state 81
    ANDLOG     shift, and go to state 82
    EXOR       shift, and go to state 83
    EQUALS     shift, and go to state 84
    COMPAR     shift, and go to state 85
    MULTI      shift, and go to state 86

    Bin_op  go to state 87


State 94

   34 Exp: INIPA Exp ENDPA .

    $default  reduce using rule 34 (Exp)


State 95

   25 Se: IF INIPA Exp . ENDPA Se
   26   | IF INIPA Exp . ENDPA Se ELSE Se
   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    BINOP     shift, and go to state 78
    ATSIGN    shift, and go to state 79
    ENDPA     shift, and go to state 111
    ORLOG     shift, and go to state 81
    ANDLOG    shift, and go to state 82
    EXOR      shift, and go to state 83
    EQUALS    shift, and go to state 84
    COMPAR    shift, and go to state 85
    MULTI     shift, and go to state 86

    Bin_op  go to state 87


State 96

   28 Se: FOR ID ASIGN . CONST_INT ITEFOR CONST_INT DO Se

    CONST_INT  shift, and go to state 112


State 97

   27 Se: WHILE INIPA Exp . ENDPA Se
   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    BINOP     shift, and go to state 78
    ATSIGN    shift, and go to state 79
    ENDPA     shift, and go to state 113
    ORLOG     shift, and go to state 81
    ANDLOG    shift, and go to state 82
    EXOR      shift, and go to state 83
    EQUALS    shift, and go to state 84
    COMPAR    shift, and go to state 85
    MULTI     shift, and go to state 86

    Bin_op  go to state 87


State 98

   29 Se: READ Lv SEMICOLON .

    $default  reduce using rule 29 (Se)


State 99

   30 Se: PRINT Lec SEMICOLON .

    $default  reduce using rule 30 (Se)


State 100

   61 Lec: Lec COMMA . Exp
   62    | Lec COMMA . WORD

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    WORD       shift, and go to state 114
    INISQR     shift, and go to state 37

    Exp    go to state 115
    Const  go to state 45


State 101

   31 Se: RETURN Exp SEMICOLON .

    $default  reduce using rule 31 (Se)


State 102

   59 lc: lc COMMA . Con

    CONSTANT      shift, and go to state 68
    CONSTANT_INT  shift, and go to state 69

    Con  go to state 116


State 103

   45 Exp: INISQR lc ENDSQR .

    $default  reduce using rule 45 (Exp)


State 104

   15 Cs: Dc ID INIPA . Pa ENDPA
   16   | Dc ID INIPA . ENDPA

    TYPEVAR  shift, and go to state 25
    ENDPA    shift, and go to state 117
    LIST     shift, and go to state 28

    Dc  go to state 118
    Pa  go to state 119


State 105

   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp
   40    | Exp BINOP Exp .

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    ATSIGN    shift, and go to state 79
    MULTI     shift, and go to state 86

    $default  reduce using rule 40 (Exp)

    Bin_op  go to state 87


State 106

   39 Exp: Exp . Bin_op Exp
   39    | Exp Bin_op Exp .
   40    | Exp . BINOP Exp

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    ATSIGN    shift, and go to state 79
    MULTI     shift, and go to state 86

    $default  reduce using rule 39 (Exp)

    Bin_op  go to state 87


State 107

   41 Exp: ID PLUSPLUS CONST_INT ATSIGN . CONST_INT

    CONST_INT  shift, and go to state 120


State 108

   42 Exp: ID INIPA Vle ENDPA .

    $default  reduce using rule 42 (Exp)


State 109

   67 Le: Le COMMA . Exp

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    ID         shift, and go to state 49
    INIPA      shift, and go to state 27
    CONST_INT  shift, and go to state 32
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    Exp    go to state 121
    Const  go to state 45


State 110

   24 Se: ID ASIGN Exp SEMICOLON .

    $default  reduce using rule 24 (Se)


State 111

   25 Se: IF INIPA Exp ENDPA . Se
   26   | IF INIPA Exp ENDPA . Se ELSE Se

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    LISTOP2    shift, and go to state 22
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    INIBLO     shift, and go to state 3
    ID         shift, and go to state 26
    INIPA      shift, and go to state 27
    IF         shift, and go to state 29
    FOR        shift, and go to state 30
    WHILE      shift, and go to state 31
    CONST_INT  shift, and go to state 32
    READ       shift, and go to state 33
    PRINT      shift, and go to state 34
    RETURN     shift, and go to state 35
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    B      go to state 38
    Se     go to state 122
    Exp    go to state 44
    Const  go to state 45


State 112

   28 Se: FOR ID ASIGN CONST_INT . ITEFOR CONST_INT DO Se

    ITEFOR  shift, and go to state 123


State 113

   27 Se: WHILE INIPA Exp ENDPA . Se

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    LISTOP2    shift, and go to state 22
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    INIBLO     shift, and go to state 3
    ID         shift, and go to state 26
    INIPA      shift, and go to state 27
    IF         shift, and go to state 29
    FOR        shift, and go to state 30
    WHILE      shift, and go to state 31
    CONST_INT  shift, and go to state 32
    READ       shift, and go to state 33
    PRINT      shift, and go to state 34
    RETURN     shift, and go to state 35
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    B      go to state 38
    Se     go to state 124
    Exp    go to state 44
    Const  go to state 45


State 114

   62 Lec: Lec COMMA WORD .

    $default  reduce using rule 62 (Lec)


State 115

   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp
   61 Lec: Lec COMMA Exp .

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    BINOP     shift, and go to state 78
    ATSIGN    shift, and go to state 79
    ORLOG     shift, and go to state 81
    ANDLOG    shift, and go to state 82
    EXOR      shift, and go to state 83
    EQUALS    shift, and go to state 84
    COMPAR    shift, and go to state 85
    MULTI     shift, and go to state 86

    $default  reduce using rule 61 (Lec)

    Bin_op  go to state 87


State 116

   59 lc: lc COMMA Con .

    $default  reduce using rule 59 (lc)


State 117

   16 Cs: Dc ID INIPA ENDPA .

    $default  reduce using rule 16 (Cs)


State 118

   20 Pa: Dc . ID

    ID  shift, and go to state 125


State 119

   15 Cs: Dc ID INIPA Pa . ENDPA
   19 Pa: Pa . COMMA Dc ID

    COMMA  shift, and go to state 126
    ENDPA  shift, and go to state 127


State 120

   41 Exp: ID PLUSPLUS CONST_INT ATSIGN CONST_INT .

    $default  reduce using rule 41 (Exp)


State 121

   39 Exp: Exp . Bin_op Exp
   40    | Exp . BINOP Exp
   67 Le: Le COMMA Exp .

    ADDITION  shift, and go to state 76
    MINMIN    shift, and go to state 77
    BINOP     shift, and go to state 78
    ATSIGN    shift, and go to state 79
    ORLOG     shift, and go to state 81
    ANDLOG    shift, and go to state 82
    EXOR      shift, and go to state 83
    EQUALS    shift, and go to state 84
    COMPAR    shift, and go to state 85
    MULTI     shift, and go to state 86

    $default  reduce using rule 67 (Le)

    Bin_op  go to state 87


State 122

   25 Se: IF INIPA Exp ENDPA Se .
   26   | IF INIPA Exp ENDPA Se . ELSE Se

    ELSE  shift, and go to state 128

    ELSE      [reduce using rule 25 (Se)]
    $default  reduce using rule 25 (Se)


State 123

   28 Se: FOR ID ASIGN CONST_INT ITEFOR . CONST_INT DO Se

    CONST_INT  shift, and go to state 129


State 124

   27 Se: WHILE INIPA Exp ENDPA Se .

    $default  reduce using rule 27 (Se)


State 125

   20 Pa: Dc ID .

    $default  reduce using rule 20 (Pa)


State 126

   19 Pa: Pa COMMA . Dc ID

    TYPEVAR  shift, and go to state 25
    LIST     shift, and go to state 28

    Dc  go to state 130


State 127

   15 Cs: Dc ID INIPA Pa ENDPA .

    $default  reduce using rule 15 (Cs)


State 128

   26 Se: IF INIPA Exp ENDPA Se ELSE . Se

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    LISTOP2    shift, and go to state 22
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    INIBLO     shift, and go to state 3
    ID         shift, and go to state 26
    INIPA      shift, and go to state 27
    IF         shift, and go to state 29
    FOR        shift, and go to state 30
    WHILE      shift, and go to state 31
    CONST_INT  shift, and go to state 32
    READ       shift, and go to state 33
    PRINT      shift, and go to state 34
    RETURN     shift, and go to state 35
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    B      go to state 38
    Se     go to state 131
    Exp    go to state 44
    Const  go to state 45


State 129

   28 Se: FOR ID ASIGN CONST_INT ITEFOR CONST_INT . DO Se

    DO  shift, and go to state 132


State 130

   19 Pa: Pa COMMA Dc . ID

    ID  shift, and go to state 133


State 131

   26 Se: IF INIPA Exp ENDPA Se ELSE Se .

    $default  reduce using rule 26 (Se)


State 132

   28 Se: FOR ID ASIGN CONST_INT ITEFOR CONST_INT DO . Se

    UNARI      shift, and go to state 20
    ADDITION   shift, and go to state 21
    LISTOP2    shift, and go to state 22
    MINMIN     shift, and go to state 23
    PLUSPLUS   shift, and go to state 24
    INIBLO     shift, and go to state 3
    ID         shift, and go to state 26
    INIPA      shift, and go to state 27
    IF         shift, and go to state 29
    FOR        shift, and go to state 30
    WHILE      shift, and go to state 31
    CONST_INT  shift, and go to state 32
    READ       shift, and go to state 33
    PRINT      shift, and go to state 34
    RETURN     shift, and go to state 35
    CONSTANT   shift, and go to state 36
    INISQR     shift, and go to state 37

    B      go to state 38
    Se     go to state 134
    Exp    go to state 44
    Const  go to state 45


State 133

   19 Pa: Pa COMMA Dc ID .

    $default  reduce using rule 19 (Pa)


State 134

   28 Se: FOR ID ASIGN CONST_INT ITEFOR CONST_INT DO Se .

    $default  reduce using rule 28 (Se)
